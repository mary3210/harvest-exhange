/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FontFamily } from './FontFamily';
/**
 *
 * @export
 * @interface ElementCustomization
 */
export interface ElementCustomization {
    /**
     * Container background color in hex.
     * Default is `#ffffff` in light mode & `#383838` in dark mode.
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_container_background_color?: string;
    /**
     * Maximum width of container (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_container_max_width?: number;
    /**
     * Input box background color in hex.
     * Default is `#ffffff` in light mode & `#4b4b4b` in dark mode.
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_input_box_background_color?: string;
    /**
     * Input box border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_input_box_border_radius?: number;
    /**
     *
     * @type {FontFamily}
     * @memberof ElementCustomization
     */
    passage_header_font_family?: FontFamily;
    /**
     *
     * @type {FontFamily}
     * @memberof ElementCustomization
     */
    passage_body_font_family?: FontFamily;
    /**
     * Header text color in hex.
     * Default is `#222222` in light mode & `#f3f3f3` in dark mode.
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_header_text_color?: string;
    /**
     * Body text color in hex.
     * Default is `#222222` in light mode & `#f3f3f3` in dark mode.
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_body_text_color?: string;
    /**
     * Primary button background colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_background_color?: string;
    /**
     * Primary button font colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_text_color?: string;
    /**
     * Primary button background on hover (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_hover_color?: string;
    /**
     * Primary button border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_radius?: number;
    /**
     * Primary button border color
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_color?: string;
    /**
     * Primary button border width (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_primary_button_border_width?: number;
    /**
     * Secondary button background colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_background_color?: string;
    /**
     * Secondary button font colour (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_text_color?: string;
    /**
     * Secondary button background on hover (hex)
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_hover_color?: string;
    /**
     * Secondary button border radius (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_radius?: number;
    /**
     * Secondary button border color
     * @type {string}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_color?: string;
    /**
     * Secondary button border width (px)
     * @type {number}
     * @memberof ElementCustomization
     */
    passage_secondary_button_border_width?: number;
}
/**
 * Check if a given object implements the ElementCustomization interface.
 */
export declare function instanceOfElementCustomization(value: object): boolean;
export declare function ElementCustomizationFromJSON(json: any): ElementCustomization;
export declare function ElementCustomizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ElementCustomization;
export declare function ElementCustomizationToJSON(value?: ElementCustomization | null): any;
